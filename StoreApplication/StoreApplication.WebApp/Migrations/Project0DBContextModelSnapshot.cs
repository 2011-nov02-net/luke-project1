// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreApplication.DataModel;

namespace StoreApplication.WebApp.Migrations
{
    [DbContext(typeof(Project0DBContext))]
    partial class Project0DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("StoreApplication.DataModel.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CustomerId");

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D1053461B38AC1")
                        .IsUnique();

                    b.ToTable("Customer", "StoreApp");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("LocationId");

                    b.HasIndex(new[] { "Name" }, "UQ__Location__737584F6D233EE55")
                        .IsUnique();

                    b.ToTable("Location", "StoreApp");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Total")
                        .HasColumnType("money");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LocationId");

                    b.ToTable("Orders", "StoreApp");
                });

            modelBuilder.Entity("StoreApplication.DataModel.OrderSale", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("money");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("PK_SaleId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderSale", "StoreApp");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("OrderLimit")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("ProductId");

                    b.HasIndex(new[] { "Name" }, "UQ__Product__737584F621731BB2")
                        .IsUnique();

                    b.ToTable("Product", "StoreApp");
                });

            modelBuilder.Entity("StoreApplication.DataModel.StoreInventory", b =>
                {
                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("LocationId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("StoreInventory", "StoreApp");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Order", b =>
                {
                    b.HasOne("StoreApplication.DataModel.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Orders__Customer__6D9742D9")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApplication.DataModel.Location", "Location")
                        .WithMany("Orders")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__Orders__Location__6CA31EA0")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("StoreApplication.DataModel.OrderSale", b =>
                {
                    b.HasOne("StoreApplication.DataModel.Order", "Order")
                        .WithMany("OrderSales")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderSale__Order__762C88DA")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApplication.DataModel.Product", "Product")
                        .WithMany("OrderSales")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__OrderSale__Produ__7720AD13")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StoreApplication.DataModel.StoreInventory", b =>
                {
                    b.HasOne("StoreApplication.DataModel.Location", "Location")
                        .WithMany("StoreInventories")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK__StoreInve__Locat__7167D3BD")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StoreApplication.DataModel.Product", "Product")
                        .WithMany("StoreInventories")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__StoreInve__Produ__725BF7F6")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Location", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("StoreInventories");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Order", b =>
                {
                    b.Navigation("OrderSales");
                });

            modelBuilder.Entity("StoreApplication.DataModel.Product", b =>
                {
                    b.Navigation("OrderSales");

                    b.Navigation("StoreInventories");
                });
#pragma warning restore 612, 618
        }
    }
}
